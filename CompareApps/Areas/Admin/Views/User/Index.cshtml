@model List<CompareApps.Models.AccountModel>
@using CompareApps.Models
@using CompareApps.Areas.Admin.Controllers
@using PagedList
@using PagedList.Mvc





@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    
}

@section leftSideBar{
    @Html.Partial("_DictionaryPartial", typeof(AccountModel))
}
<h4>Create User</h4>
 @ViewData["ErrorMessage"]
<div style="margin-left: 5%;margin-right:5%;margin-top:2%;">
   @Html.ActionLink("Create User", "Create", null, new { @class="button"})
    </div>

<h4>Manage Site Users</h4>
<div style="margin-left: 5%;margin-right:5%;">
    
    <form id="form" class='manageUsers'>
        <table style ="width:100%;" id="tblManageUser">
            <thead>
                <tr id="filterRow" class="filterRow">
                    <th id="filterHeader" class="filterHeader">Filter:
                    </th>
                    <th></th>
                    <th>All
                    </th>
                    <th>All 
                    </th>
                    <th>All 
                    </th>
                    <th></th>
                    <th></th>
               
                </tr>
                <tr>
                    <th>Username
                    </th>
                    <th>Email
                    </th>
                    <th>Role
                    </th>
                     <th>Active
                    </th>
                    <th>Locked
                    </th>
                    <th>Edit
                    </th>
                    <th>Delete
                    </th>
                </tr>




            </thead>
            <tbody>

                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Role)
                        </td>
                        <td>
                            @if (item.IsActive)
                            {
                                @Html.ActionLink("Active", "Activate", "User", new { strUserName = item.UserName }, new { onclick = "return true;", @class = "imageActiveItem" }) 

                            }
                            else
                            {
                                @Html.ActionLink("Inactive", "Activate", "User", new { strUserName = item.UserName }, new { onclick = "return true;", @class = "imageInActiveItem" }) 

                            }
                        </td>

                        <td>
                            @if (item.IsLockedOut)
                            {
                                @Html.ActionLink("Locked", "LockedOut", "User", new { strUserName = item.UserName }, new { onclick = "return true;", @class = "imageLockedItem" }) 

                            }
                            else
                            {
                                @Html.ActionLink("Unlocked", "LockedOut", "User", new { strUserName = item.UserName }, new { onclick = "return true;", @class = "imageUnLockedItem" }) 

                            }
                        </td>
                        <td>
                            @Html.ActionLink(" ", "Edit", "User", new { strUserName = item.UserName }, new { onclick = "return true;", @class = "imageEditItem" })
                        
                        </td>
                        <td>
                            @if (item.UserName == User.Identity.Name)
                            {
                            }
                            else
                            {
                                @Html.ActionLink(" ", "Delete", "User", new { strUserName = item.UserName }, new { onclick = "return deleteConfirm();", @class = "imageDeleteItem" }) 
                            }
                        </td>
                    </tr>
                    }
                }



            </tbody>
        </table>

    </form>
</div>

@section Scripts{
    <link href="@Url.Content("~/Content/DataTables/demo_table.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/DataTables/demo_page.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/DataTables/demo_table_jui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/themes/smoothness/jquery-ui-1.8.4.custom.css")" rel="stylesheet" type="text/css"/>
    <script src="@Url.Content("~/Scripts/jquery.dataTables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.dataTables.columnFilter.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.jeditable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.dataTables.editable.js")" type="text/javascript"></script>
    <script type="text/javascript">



        $('#form').submit(function () {
            var sData = oTable.$('input').serialize();
            alert("The following data would have been submitted to the server: \n\n" + sData);
            return false;
        });

        $(document).ready(function () {
            var oTable = $('#tblManageUser').dataTable({
                "aaSorting": [],
                "bJQueryUI": true,
                "bStateSave": true,
                "sPaginationType": "full_numbers",
                "bAutoWidth": false,
                "aoColumns": [{ "sWidth": "20%" }, { "sWidth": "25%" }, { "sWidth": "15%" }, { "sWidth": "10%" }, { "sWidth": "10%" }, { "sWidth": "10%", "bSortable": false }, { "sWidth": "10%", "bSortable": false }]
            });

            $('#tblManageUser').dataTable()
            .columnFilter({
                sPlaceHolder: "head:before",
                aoColumns: [
                            null,
                            null,
                             { type: "select" },
                             { type: "select", bRegex: false, bSmart: false, values: ['Active', 'Inactive'] },
                             { type: "select", bRegex: false, bSmart: false, values: ['Locked', 'Unlocked'] },
                            null,
                            null,
                ]

            });
        });
        function deleteConfirm() {
            if (confirm("Are you sure want to delete this record?"))
                return true;
            else
                return false;
        }
    </script>
}